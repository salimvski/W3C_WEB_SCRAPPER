p { background: lime; } p cssHTML css.py css.sh monfile README.md requirements.txt run.sh sass.sh scrap { background: lime; } p > cssHTML css.py css.sh monfile README.md requirements.txt run.sh sass.sh scrap { background: lime; } p + cssHTML css.py css.sh monfile README.md requirements.txt run.sh sass.sh scrap { background: lime; } p ~ cssHTML css.py css.sh monfile README.md requirements.txt run.sh sass.sh scrap { background: lime; } /bin /boot /cdrom /dev /etc /home /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /swapfile /sys /tmp /usr /var let's try some pseudos that are not valid CSS but are likely to be implemented as extensions in some UAs. These should not be recognised, as UAs implementing such extensions should use the :-vnd-ident syntax. cssHTML/ monfile/ :canvas { background: red; } :viewport { background: red; } :window { background: red; } :menu { background: red; } :table { background: red; } :select { background: red; } ::canvas { background: red; } ::viewport { background: red; } ::window { background: red; } ::menu { background: red; } ::table { background: red; } ::select { background: red; }
